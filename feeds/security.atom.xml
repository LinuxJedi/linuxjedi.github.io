<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LinuxJedi's /dev/null</title><link href="http://linuxjedi.co.uk/" rel="alternate"></link><link href="http://linuxjedi.co.uk/feeds/security.atom.xml" rel="self"></link><id>http://linuxjedi.co.uk/</id><updated>2015-01-28T10:24:00+00:00</updated><entry><title>YubiKey NEO with GnuPG</title><link href="http://linuxjedi.co.uk/posts/2015/Jan/28/yubikey-neo-with-gnupg/" rel="alternate"></link><published>2015-01-28T10:24:00+00:00</published><author><name></name></author><id>tag:linuxjedi.co.uk,2015-01-28:posts/2015/Jan/28/yubikey-neo-with-gnupg/</id><summary type="html">&lt;p&gt;Last week I published a blog post on using &lt;a class="reference external" href="http://linuxjedi.co.uk/posts/2015/Jan/19/yubikey-for-os-logins/"&gt;YubiKey for OS Logins&lt;/a&gt;.  Since then I've had a request from inside HP to create a blog post on using the YubiKey NEO with GnuPG which is another thing I have done with my NEO.&lt;/p&gt;
&lt;p&gt;The YubiKey NEO has a built-in CCID smartcard interface which is disabled by default.  GnuPG can use this instead of a passphrase for your keys.  This blog post will give some indication on how to do this.  It is assuming you have some experience of using gpg, I wanted to keep this as short as possible and it can be a complex topic.  As with any process I highly recommend backing up your existing gpg keys if you have any:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg -o key-backup.key --armour --export-secret-keys email@address.com
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we start you will need to enable CCID on the YubiKey NEO, it is disabled by default.  The easiest way to do this is to use the &lt;a class="reference external" href="https://developers.yubico.com/yubikey-neo-manager/"&gt;YubiKey NEO Manager&lt;/a&gt;.  In this tool click on &lt;em&gt;Change connection mode&lt;/em&gt; and tick the CCID box.&lt;/p&gt;
&lt;p&gt;First of all the YubiKey's CCID needs initializing.  The following enables the admin commands and starts the generation of new keys.  If you want to use the YubiKey with your old key then Ctrl-C out when it asks about the expiry.  Otherwise go through the prompts and make sure to use the &lt;tt class="docutils literal"&gt;save&lt;/tt&gt; command afterwards:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --card-edit

gpg/card&amp;gt; admin

gpg/card&amp;gt; generate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, every time you use it you will be asked for the PIN or admin PIN.  These are set to some basic defaults ('123456' and '12345678' respectively) so it would be a good idea to change these:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --change-pin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Option 1 is to change the access PIN and option 3 is to change the admin PIN.&lt;/p&gt;
&lt;div class="section" id="using-an-existing-key"&gt;
&lt;h2&gt;Using an existing key&lt;/h2&gt;
&lt;p&gt;If you have followed the steps above you have a primed smart card on your YubiKey ready to load your key onto.  Before we do this you need a total of three subkeys, one for encryption (you likely already have), one for signing and one for authentication.  We need to enter the key editor mode of gpg to look at this and add these:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --expert --edit-key email@address.com
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get a list of your key and subkeys straight away.  The &lt;em&gt;Usage&lt;/em&gt; column is the one we are looking for here.  You need an &lt;tt class="docutils literal"&gt;E&lt;/tt&gt; for Encryption, &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; for Authentication and &lt;tt class="docutils literal"&gt;S&lt;/tt&gt; for Signing.  If you are missing any of these:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gpg&amp;gt; addkey
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Select option 8 (RSA) and then add whatever you need.  Repeat the process until you have one of each.&lt;/p&gt;
&lt;p&gt;You are now ready to move the keys to the YubiKey:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gpg&amp;gt; key 1
gpg&amp;gt; keytocard
gpg&amp;gt; key 2
gpg&amp;gt; keytocard
gpg&amp;gt; key 3
gpg&amp;gt; keytocard
gpg&amp;gt; save
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your secret subkeys are now on the YubiKey which can be verified using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --card-status
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="YubiKey"></category><category term="Security"></category><category term="HP"></category><category term="Advanced Technology Group"></category></entry><entry><title>Webserver Concealing</title><link href="http://linuxjedi.co.uk/posts/2015/Jan/21/webserver-concealing/" rel="alternate"></link><published>2015-01-21T19:30:00+00:00</published><author><name></name></author><id>tag:linuxjedi.co.uk,2015-01-21:posts/2015/Jan/21/webserver-concealing/</id><summary type="html">&lt;p&gt;Right now there are bots on the internet scanning every IP possible for vulnerable servers.  This is a fact of life on the internet.  This means you need to keep any internet facing machines as secure as possible.&lt;/p&gt;
&lt;p&gt;Whilst it is no panacea one step you can take to hide the version of the web server software you are using.  If there is a zero-day bug a bot or malicious person is scanning for and you are vulnerable this can help hide it.&lt;/p&gt;
&lt;p&gt;I was recently looking at an SSL problem with a local high school and found the server was reporting the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Server:Apache/2.2.15 (Novell)
X-Powered-By:PHP/5.3.3
&lt;/pre&gt;
&lt;p&gt;There are several problems here, all are solvable:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Novell is unmaintained.  There are no security updates.  This needs replacing with something such as a Linux distribution or FreeBSD which does get updates.&lt;/li&gt;
&lt;li&gt;Apache 2.2.15 and PHP 5.3.3 are both around 4-5 years old.  They have dozens of known bugs and secrity flaws which are fixed in newer versions.&lt;/li&gt;
&lt;li&gt;The server version is advertised.  I was able to find this information easily which means any hacker can, then he can cross-reference with known security flaws and do whatever he wants with this server.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Clearly the first thing that should be done here is to update the server and its software packages.  But in addition it is possible to hide the versions used so at least one of these three points is eliminated.&lt;/p&gt;
&lt;p&gt;First to hide the Apache server version we simply need to add one line to the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;ServerTokens&lt;/span&gt; prod
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The server will now only announce that it is running Apache but no server version or OS used.&lt;/p&gt;
&lt;p&gt;As for PHP, you can turn the announcement off completely with the following in your php.ini file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;expose_php&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is only one small security improvement, but having many layers of security will help dramatically to protect your servers.  I only recommend this after dealing with things like software updates, firewalls, code security audits, etc...&lt;/p&gt;
&lt;p&gt;As a side note, if you are using PHP I highly recommend using &lt;a class="reference external" href="http://suhosin.org/"&gt;Suhosin&lt;/a&gt; to help secure your server installation.&lt;/p&gt;
</summary><category term="HP"></category><category term="Advanced Technology Group"></category><category term="Security"></category></entry><entry><title>YubiKey for OS Logins</title><link href="http://linuxjedi.co.uk/posts/2015/Jan/19/yubikey-for-os-logins/" rel="alternate"></link><published>2015-01-19T16:14:00+00:00</published><author><name></name></author><id>tag:linuxjedi.co.uk,2015-01-19:posts/2015/Jan/19/yubikey-for-os-logins/</id><summary type="html">&lt;p&gt;I have mentioned a few times in this blog that HP takes security very seriously and HP's Advanced Technology Group is always looking into new ways of making things secure.  Recently the team all got a &lt;a class="reference external" href="https://www.yubico.com/products/yubikey-hardware/yubikey-neo/"&gt;YubiKey Neo&lt;/a&gt; to use.  The initial idea was we would be trying the FIDO U2F with Google accounts but several of us went much further.&lt;/p&gt;
&lt;p&gt;Yazz Atlas from our team has been working on getting his SSH key into the NEO with some success.  I initially got my GPG key to work with the smart card feature in the NEO and have since been tinkering with a couple of other things.&lt;/p&gt;
&lt;p&gt;I happened to find an original YubiKey in a drawer which was used for OTP two-factor authentication to a server I no longer have access to.  I wanted to use this as a way of two-factor authentication for my computers.  Unfortunately there is no good way of doing this on the Mac at the moment so I came up with a different way of doing a less secure two-factor authentication with it (but more secure than a fixed password).&lt;/p&gt;
&lt;p&gt;The original YubiKey's have two &amp;quot;slots&amp;quot; in them.  Each slot can store either an OTP two-factor authentication identity or a static password.  You can tap a YubiKey to get the first slot and hold for around 3 seconds for the second slot.  The way I'm using this is to have the slots store static passwords, I then have a hand typed part of my password and a second static part stored on the YubiKey.  This means that if the YubiKey is stolen/used it is useless without my hand typed-part.  I have a backup of the YubiKey's static password in my &lt;a class="reference external" href="https://lastpass.com/"&gt;LastPass&lt;/a&gt; account (which incidentally uses two-factor authentication).&lt;/p&gt;
&lt;p&gt;There was a minor snag in this to begin with, my Macs are encrypted with FileVault which has a known login problem.  If you type a password too quickly it actually drops some of characters that you have typed.  The YubiKey is a virtual keyboard and although it deliberately doesn't type too quickly, it is too fast for FileVault.  If your YubiKey is a version 2.3 or higher this is easy to fix.  In the &lt;a class="reference external" href="https://www.yubico.com/products/services-software/personalization-tools/"&gt;YubiKey Personalization Tool&lt;/a&gt; you can go to settings and change the output frequency, this setting change can then be used to update a slot.  But if like me your original YubiKey is an older version you cannot do this.  There is a way around this by generating a new key, but it requires the command line (the GUI doesn't have the options to change the delay whilst generating a new key).&lt;/p&gt;
&lt;p&gt;First of all you need the command line YubiKey Personalization Tool.  There are &lt;a class="reference external" href="https://yubico.github.io/yubikey-personalization/releases.html"&gt;Linux, Mac and Windows versions available&lt;/a&gt; and some Linux distros have it in their repository.  Using this tool you can generate a new random static password with a typing delay as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ykpersonalize -2 -opacing-20ms -ostrong-pw2 -ostrong-pw1 -ostatic-token
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can change the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-2&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-1&lt;/span&gt;&lt;/tt&gt; if you wish to program slot 1 instead.  The typing delay is added using the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pacing-20ms&lt;/span&gt;&lt;/tt&gt; option.  Unfortunately this flag doesn't quite match the GUI, if you want to match the GUI options here is what you need to use:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;20ms Delay - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pacing-10ms&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;40ms Delay - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pacing-20ms&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;60ms Delay - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pacing-20ms&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pacing-10ms&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For FileVault it is recommended you using the 40ms delay as a minimum.  The 20ms delay works most of the time but can still fail.&lt;/p&gt;
&lt;p&gt;So, now to log into my machines I type in the part of the password I have remembered and then press the YubiKey to fill in the rest of the password.&lt;/p&gt;
</summary><category term="YubiKey"></category><category term="Security"></category><category term="HP"></category><category term="Advanced Technology Group"></category></entry></feed>